version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9
      - image: circleci/postgres:13
        environment:
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: circleci_pwd
          POSTGRES_DB: circle_test
    working_directory: ~/repo
    steps:
      - checkout
      - run: pip install -r requirements.txt
      - run:
          name: Set Secret Key
          command: |
            echo 'export SECRET_KEY=${SECRET_KEY}' >> $BASH_ENV
            source $BASH_ENV
          when: always
      - run:
          name: Install Dockerize
          command: |
            sudo apt-get update
            sudo apt-get install wget
            wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
            rm dockerize-linux-amd64-v0.6.1.tar.gz
      - run:
          name: Install Google Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y curl unzip xvfb wget
            wget -q https://github.com/MyRobotLab/chrome-linux/raw/master/chrome-linux.zip
            sudo unzip chrome-linux.zip -d /opt
            sudo ln -s /opt/chrome-linux/chrome /usr/bin/google-chrome
            google-chrome --version
      - run:
          name: Install ChromeDriver
          command: |
            CHROMEDRIVER_VERSION="112.0.5615.49"
            curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
            cd /tmp
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/chromedriver
            sudo chmod +x /usr/local/bin/chromedriver
            chromedriver --version
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            python manage.py test --noinput --settings=inventory.settings.test
